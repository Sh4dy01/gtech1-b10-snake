@startuml





/' Objects '/

class Fruit {
	+Fruit()
	+~Fruit()
	+GenerateFruit() : Fruit*
	+GetNext() : Fruit*
	-next : Fruit*
	+CheckNext() : bool
	+GetMalus() : bool
	-malus : bool
	+GetStar() : int
	+GetX() : int
	+GetY() : int
	-star : int
	-x : int
	-y : int
	+GenerateFruitCoord(Segment* head, Fruit* fruit) : void
	+ResetFruits() : void
	+SetMalus() : void
}


class MainSDLWindow {
	+MainSDLWindow()
	+~MainSDLWindow()
	-map : SDL_Rect
	-scoreArea : SDL_Rect
	-square : SDL_Rect
	+GetRenderer() : SDL_Renderer*
	-renderer : SDL_Renderer*
	-scoreSurface : SDL_Surface*
	- : SDL_Texture*
	- : SDL_Texture*
	+CreateTextureFromImage(const char path) : SDL_Texture*
	-headTexture : SDL_Texture*
	-mBallTexture : SDL_Texture*
	-tailTexture : SDL_Texture*
	- : SDL_Texture**
	- : SDL_Texture**
	- : SDL_Texture**
	-window : SDL_Window*
	-font : TTF_Font*
	+GetGameState() : bool
	+GetIfWon() : bool
	-IsGameRunning : bool
	-IsGameWon : bool
	-scoreText : const char*
	+Init() : int
	-ballCount : int
	-highScore : int
	-ballString : string
	-scoreString : string
	+CheckForQuit() : void
	+CheckIfWon(int length, int turn) : void
	+Draw(Segment* head, Fruit* fruits, bool ballStars, int length, int score) : void
	+DrawSet(int star) : void
	+DrawText(const char name) : void
	+DrawText(const char name, int score) : void
	+SetBallTexture(int star) : void
}


class Segment {
	+Segment()
	+~Segment()
	+AddSnake(int direction, int x, int y) : Segment*
	+GetNext() : Segment*
	-next : Segment*
	+CheckNext() : bool
	+GetDirection() : int
	+GetX() : int
	+GetY() : int
	-direction : int
	-nextDirection : int
	-x : int
	-y : int
	+Init(int direction, int x, int y) : void
	+Move() : void
	+ResetBody() : void
	+SetDirection(int nextDirection) : void
	+SetX(int newx) : void
	+SetY(int newy) : void
}


class Snake {
	+Snake()
	+~Snake()
	+GetFruit() : Fruit*
	-fruit : Fruit*
	+GetHead() : Segment*
	-head : Segment*
	-startCol : Segment*
	-tail : Segment*
	-IsGameWon : bool
	-ballStars : bool
	+GetBallStars() : bool*
	+GetBallCount() : int
	+GetLength() : int
	+GetScore() : int
	+GetTurn() : int
	+GetX() : int
	+GetY() : int
	-count : int
	-direction : int
	-length : int
	-newDirection : int
	-score : int
	-turn : int
	+CheckBorders() : void
	+CheckCollision() : void
	+CheckDirection() : void
	+CheckFruit() : void
	+Debug() : void
	+Eat() : void
	+Move() : void
	+Reset() : void
	+UpdateCoords() : void
}





/' Inheritance relationships '/




/' Aggregation relationships '/

.Fruit o-- .Fruit


.Segment o-- .Segment


.Snake o-- .Fruit


.Snake "3" o-- .Segment






/' Nested objects '/



@enduml

